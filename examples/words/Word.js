(function() {

    if (!window.voxelcss) window.voxelcss = {};


    function Word() {
        var self = this;
        var undefined;

        var editor;

        self.addLetter = addLetter;
        self.addWord = addWord;

        function addLetter(_letter, _x, _y, _z, _d) {
            for (var y = 0; y < letter[_letter].length; y++) {
                for (var x = 0; x < letter[_letter][y].length; x++) {
                    if (letter[_letter][4 - y][x] == 1) {
                        editor.add(new voxelcss.Voxel((x * _d) + (_x * _d - (2 * _d)), (y * _d) + (_y * _d - (2 * _d)), _z, _d, {
                            mesh: voxelcss.Meshes.treeTrunk
                        }));
                    }
                }
            }
        }

        function addWord(_word, _x, _y, _z, _d) {
            var x = _x / _d, y = _y / _d, z = _z / _d;
            var word = _word.toLowerCase().split("").reverse().join("").split(" ").reverse().join(" ");
            var width = 0;

            for (var i = 0; i < word.length; i++) {
                width += letter[word[i]][0].length + 1;
            }

            width--;

            var sX = x - Math.round((width / 2));
            sX += letter[word[word.length - 1]][0].length;

            for (var i = (word.length - 1); i > -1; i--) {
                addLetter(word[i], sX, y, z, _d);
                sX += (letter[word[i]][0].length + 1);
            }
        }

        (function Constructor(_editor) {
            if (_editor === undefined)
                throw 'World cannot be instantiated without a Scene instance';

            editor = _editor;
        }).apply(self, arguments);
    }

    voxelcss.Word = Word;

    var letter = {
        '0': [
            [1, 1, 1],
            [1, 0, 1],
            [1, 0, 1],
            [1, 0, 1],
            [1, 1, 1]
        ],
        '1': [
            [1, 1, 0],
            [0, 1, 0],
            [0, 1, 0],
            [0, 1, 0],
            [1, 1, 1]
        ],
        '2': [
            [1, 1, 1],
            [0, 0, 1],
            [1, 1, 1],
            [1, 0, 0],
            [1, 1, 1]
        ],
        '3': [
            [1, 1, 1],
            [, , 1],
            [1, 1, 1],
            [, , 1],
            [1, 1, 1]
        ],
        '4': [
            [1, 0, 1],
            [1, 0, 1],
            [1, 1, 1],
            [0, 0, 1],
            [0, 0, 1]
        ],
        '5': [
            [1, 1, 1],
            [1, 0, 0],
            [1, 1, 1],
            [0, 0, 1],
            [1, 1, 1]
        ],
        '6': [
            [1, 1, 1],
            [1, 0, 0],
            [1, 1, 1],
            [1, 0, 1],
            [1, 1, 1]
        ],
        '7': [
            [1, 1, 1],
            [0, 0, 1],
            [0, 0, 1],
            [0, 0, 1],
            [0, 0, 1]
        ],
        '8': [
            [1, 1, 1],
            [1, 0, 1],
            [1, 1, 1],
            [1, 0, 1],
            [1, 1, 1]
        ],
        '9': [
            [1, 1, 1],
            [1, 0, 1],
            [1, 1, 1],
            [0, 0, 1],
            [1, 1, 1]
        ],
        '.': [
            [0],
            [0],
            [0],
            [0],
            [1]
        ],
        '!': [
            [1],
            [1],
            [1],
            [0],
            [1]
        ],
        'a': [
            [1, 1, 1, 1],
            [1, 0, 0, 1],
            [1, 1, 1, 1],
            [1, 0, 0, 1],
            [1, 0, 0, 1]
        ],
        'b': [
            [1, 1, 1, 0],
            [1, 0, 0, 1],
            [1, 1, 1, 0],
            [1, 0, 0, 1],
            [1, 1, 1, 0]
        ],
        'c': [
            [1, 1, 1, 1],
            [1, 0, 0, 0],
            [1, 0, 0, 0],
            [1, 0, 0, 0],
            [1, 1, 1, 1]
        ],
        'd': [
            [1, 1, 1, 0],
            [1, 0, 0, 1],
            [1, 0, 0, 1],
            [1, 0, 0, 1],
            [1, 1, 1, 0]
        ],
        'e': [
            [1, 1, 1, 1],
            [1, 0, 0, 0],
            [1, 1, 1, 1],
            [1, 0, 0, 0],
            [1, 1, 1, 1]
        ],
        'f': [
            [1, 1, 1, 1],
            [1, 0, 0, 0],
            [1, 1, 1, 0],
            [1, 0, 0, 0],
            [1, 0, 0, 0]
        ],
        'g': [
            [1, 1, 1, 1],
            [1, 0, 0, 0],
            [1, 0, 1, 1],
            [1, 0, 0, 1],
            [1, 1, 1, 1]
        ],
        'h': [
            [1, 0, 0, 1],
            [1, 0, 0, 1],
            [1, 1, 1, 1],
            [1, 0, 0, 1],
            [1, 0, 0, 1]
        ],
        'i': [
            [1, 1, 1],
            [0, 1, 0],
            [0, 1, 0],
            [0, 1, 0],
            [1, 1, 1]
        ],
        'j': [
            [1, 1, 1, 1],
            [0, 0, 1, 0],
            [0, 0, 1, 0],
            [1, 0, 1, 0],
            [1, 1, 1, 0]
        ],
        'k': [
            [1, 0, 0, 1],
            [1, 0, 1],
            [1, 1],
            [1, 0, 1],
            [1, 0, 0, 1]
        ],
        'l': [
            [1, 0, 0, 0],
            [1, 0, 0, 0],
            [1, 0, 0, 0],
            [1, 0, 0, 0],
            [1, 1, 1, 1]
        ],
        'm': [
            [0, 1, 0, 1, 0],
            [1, 0, 1, 0, 1],
            [1, 0, 1, 0, 1],
            [1, 0, 1, 0, 1],
            [1, 0, 1, 0, 1]
        ],
        'n': [
            [1, 0, 0, 1],
            [1, 1, 0, 1],
            [1, 0, 1, 1],
            [1, 0, 0, 1],
            [1, 0, 0, 1]
        ],
        'o': [
            [1, 1, 1, 1],
            [1, 0, 0, 1],
            [1, 0, 0, 1],
            [1, 0, 0, 1],
            [1, 1, 1, 1]
        ],
        'p': [
            [1, 1, 1, 1],
            [1, 0, 0, 1],
            [1, 1, 1, 1],
            [1, 0, 0, 0],
            [1, 0, 0, 0]
        ],
        'q': [
            [1, 1, 1, 1],
            [1, 0, 0, 1],
            [1, 0, 0, 1],
            [1, 0, 1, 0],
            [1, 1, 0, 1]
        ],
        'r': [
            [1, 1, 1, 1],
            [1, 0, 0, 1],
            [1, 1, 1, 0],
            [1, 0, 0, 1],
            [1, 0, 0, 1]
        ],
        's': [
            [1, 1, 1, 1],
            [1, 0, 0, 0],
            [1, 1, 1, 1],
            [0, 0, 0, 1],
            [1, 1, 1, 1]
        ],
        't': [
            [1, 1, 1, 1, 1],
            [0, 0, 1, 0, 0],
            [0, 0, 1, 0, 0],
            [0, 0, 1, 0, 0],
            [0, 0, 1, 0, 0]
        ],
        'u': [
            [1, 0, 0, 1],
            [1, 0, 0, 1],
            [1, 0, 0, 1],
            [1, 0, 0, 1],
            [1, 1, 1, 1]
        ],
        'v': [
            [1, 0, 0, 1],
            [1, 0, 0, 1],
            [1, 0, 0, 1],
            [1, 0, 0, 1],
            [0, 1, 1, 0]
        ],
        'w': [
            [1, 0, 0, 0, 1],
            [1, 0, 0, 0, 1],
            [1, 0, 1, 0, 1],
            [1, 0, 1, 0, 1],
            [0, 1, 0, 1, 0]
        ],
        'x': [
            [1, 0, 0, 1],
            [1, 0, 0, 1],
            [0, 1, 1, 0],
            [1, 0, 0, 1],
            [1, 0, 0, 1]
        ],
        'y': [
            [1, 0, 0, 1],
            [1, 0, 0, 1],
            [1, 1, 1, 1],
            [0, 0, 0, 1],
            [1, 1, 1, 1]
        ],
        'z': [
            [1, 1, 1, 1],
            [0, 0, 0, 1],
            [0, 0, 1, 0],
            [0, 1, 0, 0],
            [1, 1, 1, 1]
        ],
    };
})();
